#* 
 * Copyright 2011 Xebia and the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.     
*#  
#macro( exploreNodes $node )
    #set( $nodeCount = $nodeCount +1 )
    #set( $color = $nodeCount % 255 )

    #if ($node.artifact.groupId.startsWith($groupIdsFilteringREGEXMatch))

        <node ID="ID_$nodeCount" CREATED="$creationTS" MODIFIED="$creationTS">
            <richcontent TYPE="NODE">
            <html>
              <head></head>
              <body>
                <p>
                  ## Set grey color for groupId
                  <font color="#b2b2b2">$node.artifact.groupId</font>
                </p>
                <p>
                  ## Setting artifactId and scope
                  ## No scope defined for the root node. It's the principal artifact 
                  #if (!$node.artifact.scope)
                    <b>$node.artifact.artifactId</b>
                  #end
                  #if ($node.artifact.scope)
                    
                    ## Set red color for artifactId if scope equals to runtime
                    #if ($node.artifact.scope == 'runtime')
                      <b><font color="#cc0033">$node.artifact.artifactId</font></b> 
                      <font color="#b2b2b2"><small>[<i>$node.artifact.scope</i>]</small></font>
                    #end
                    
                    ## Set blue color for artifactId if scope equals to compile
                    #if ($node.artifact.scope == 'compile')
                      <b><font color="#0033cc">$node.artifact.artifactId</font></b>
                      <font color="#b2b2b2"><small>[<i>$node.artifact.scope</i>]</small></font>
                    #end
                    
                    ## Set green color for artifactId if scope equals to test
                    #if ($node.artifact.scope == 'test')
                      <b><font color="#33cc00">$node.artifact.artifactId</font></b>
                      <font color="#b2b2b2"><small>[<i>$node.artifact.scope</i>]</small></font>
                    #end
                  #end
                </p>
                <p>
                  ## Set grey color for version
                  <small><font color="#b2b2b2">$node.artifact.version</font></small>
                </p>
              </body>
            </html>
            </richcontent>
            #* 
               For the parent node (root node) add an additional node to the left of the parent node
               which contains the following text: Generated : ${date} with a calendar icon        
            *#   
            #if (!$rootNodeExplored)
                <node TEXT="Generated : ${date}" POSITION="left" ID="ID_${nodeCount}000" CREATED="$creationTS" MODIFIED="$creationTS">
                    <icon BUILTIN="calendar"/>
                </node>
                #*
                   For the parent node (root node), when the filter is used on groupeId
                   we add an additional node to the left of the parent node
                   which contains the following text: Only groups starting with [$ {} groupIdsFilteringREGEXMatch] are Shown
                   with a messagebox_warning icon 
                *#   
                #if( $groupIdsFilteringREGEXMatch.length() > 0)
                    <node TEXT="Only groups starting with [${groupIdsFilteringREGEXMatch}] are shown" POSITION="left" ID="ID_${nodeCount}001" CREATED="$creationTS" MODIFIED="$creationTS">
                        <icon BUILTIN="messagebox_warning"/>
                    </node>
                #end
            #end

            #if (!$rootNodeExplored)
                #set( $rootNodeExplored = true )
            #end
            
            ## Browsing the son nodes of current node and recursively call the method: exploreNodes
            #foreach( $dependencyNode in $sorter.sort($node.children,"artifact.artifactId") )
                #exploreNodes($dependencyNode)
            #end
        </node>
    #end
#end
#set( $nodeCount = 0 )
#set( $Integer = 0 )
#set( $rootNodeExplored = false )

<map version="0.9.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->


#exploreNodes($rootNode)

</map>